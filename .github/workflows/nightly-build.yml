jobs:
  build:
    if: ${{ needs.check_commits.outputs.build == 'true' || github.event.inputs.forced
      == 'true' }}
    name: build GO
    needs: check_commits
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Gitblit
      uses: actions/checkout@v3
      with:
        submodules: true
    - continue-on-error: true
      name: Setup Java 8
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 8
    - continue-on-error: true
      name: Report Java version
      run: 'java -version

        javac -version

        '
    - continue-on-error: true
      name: Build GO with Ant
      run: ant buildGO
    - continue-on-error: true
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        }}
      name: Save built Gitblit package
      uses: actions/upload-artifact@v3
      with:
        name: gitblit-nightly
        path: build/target/gitblit-*-SNAPSHOT.tar.gz
  check_commits:
    name: Check for new commits
    outputs:
      build: ${{ steps.cache-sha.outputs.cache-hit == false }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: cache-sha
      name: Cache marker for latest commit
      uses: actions/cache@v3
      with:
        key: sha-${{ github.sha }}
        path: timestamp.txt
    - continue-on-error: true
      if: ${{ steps.cache-sha.outputs.cache-hit == false }}
      name: Register latest commit
      run: 'echo "Current commit $GITHUB_SHA has no cache hit."

        date > timestamp.txt

        echo "Build job should be triggered now"

        cat timestamp.txt

        '
    - continue-on-error: true
      if: ${{ steps.cache-sha.outputs.cache-hit }}
      name: Stop on no new commit
      run: 'echo "Current commit $GITHUB_SHA was already seen."

        echo "Build job should be skipped."

        [ -f timestamp.txt ] && cat timestamp.txt

        '
  docker:
    env:
      GH_ORG: gitblit-org
      GITBLIT_VERSION: SNAPSHOT
    if: needs.secret-gate.outputs.build_docker == 'true' && (github.ref == 'refs/heads/master'
      || github.ref == 'refs/heads/develop')
    name: Build and push nightly docker image
    needs: secret-gate
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout gitblit-docker
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
        ref: master
        repository: ${{ env.GH_ORG }}/gitblit-docker
    - continue-on-error: true
      id: get-gb
      name: Download Gitblit nightly build
      uses: actions/download-artifact@v3
      with:
        name: gitblit-nightly
    - continue-on-error: true
      id: gb-version
      name: Extract snapshot version
      run: "for file in $(ls -1 ${{steps.get-gb.outputs.download-path}}) ; do\n  if\
        \ [[ \"$file\" = gitblit-*.gz ]] ; then gbver=$file ; fi\ndone\ngbver=${gbver%.tar.gz}\n\
        gbver=${gbver##*gitblit-}\necho \"Version detected: $gbver\"\necho \"GITBLIT_VERSION=$gbver\"\
        \ >> \"${GITHUB_ENV}\"\necho \"gb-version=$gbver\" >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      name: Generate Dockerfile for snapshot image
      run: 'generate/generate_dockerfile.sh -v ${{ steps.gb-version.outputs.gb-version
        }} > generate/Dockerfile

        echo "BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S)" >> "${GITHUB_ENV}"

        '
    - continue-on-error: true
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        password: ${{ secrets.DOCKERHUB_GB_TOKEN }}
        username: ${{ secrets.DOCKERHUB_GB_USER }}
    - continue-on-error: true
      name: Build snapshot docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: generate/Dockerfile
        labels: 'org.label-schema.vcs-ref=${{github.sha}}

          org.label-schema.build-date=${{env.BUILD_DATE}}

          org.opencontainers.image.revision=${{ env.GITBLIT_GIT_SHA }}

          org.opencontainers.image.created=${{ env.BUILD_DATE }}

          '
        load: true
        push: false
        tags: gitblit/gitblit:nightly
    - continue-on-error: true
      name: Install Goss for testing the docker image
      uses: e1himself/goss-installation-action@v1.0.4
      with:
        version: v0.3.16
    - continue-on-error: true
      env:
        GOSS_WAIT_OPTS: -r 15s -s 5s > /dev/null
      name: Test docker container - normal mode
      run: 'dgoss run  -p 8080:8080  -p 8443:8443  gitblit/gitblit:nightly

        '
    - continue-on-error: true
      env:
        GOSS_WAIT_OPTS: -r 15s -s 5s > /dev/null
      name: Test docker container - bind mount
      run: 'mkdir gitblit-data

        mkdir gitblit-data/etc

        echo "This should not be overwritten" > gitblit-data/etc/gitblit.properties

        echo "include = gitblit-docker.properties" >> gitblit-data/etc/gitblit.properties

        sed -e ''/mode: / d'' -e ''/group: / d'' goss.yaml > gitblit-data/goss.yaml

        cp goss_wait.yaml gitblit-data/

        GOSS_FILES_PATH=gitblit-data dgoss run -p 8080:8080  -p 8443:8443 -v "$PWD/gitblit-data":/var/opt/gitblit
        gitblit/gitblit:nightly

        [ -d gitblit-data/srv/git ] || exit 1

        [ -f gitblit-data/etc/defaults.properties ] || exit 1

        grep --quiet "This should not be overwritten"  gitblit-data/etc/gitblit.properties
        || exit 1

        sudo rm -rf gitblit-data

        '
    - continue-on-error: true
      env:
        GOSS_WAIT_OPTS: -r 15s -s 5s > /dev/null
      name: Test docker container - tmpfs
      run: 'dgoss run  -p 8080:8080  -p 8443:8443 --tmpfs /var/opt/gitblit/temp gitblit/gitblit:nightly

        '
    - continue-on-error: true
      if: ${{ github.repository != 'gitblit-org/gitblit' }}
      uses: geekyeggo/delete-artifact@v2
      with:
        failOnError: false
        name: gitblit-nightly
    - continue-on-error: true
      name: Push docker image to registry
      uses: docker/build-push-action@v3
      with:
        context: .
        file: generate/Dockerfile
        labels: 'org.label-schema.vcs-ref=${{github.sha}}

          org.label-schema.build-date=${{env.BUILD_DATE}}

          '
        push: false
        tags: gitblit/gitblit:nightly
  secret-gate:
    name: Gate job checking for docker hub secret
    needs: build
    outputs:
      build_docker: ${{steps.check-dh-login.outputs.secrets_present}}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: check-dh-login
      name: Check if we have the necessary data for docker
      run: "if [[ -n \"${{secrets.DOCKERHUB_GB_TOKEN}}\" && -n \"${{secrets.DOCKERHUB_GB_USER}}\"\
        \ ]] ; then\n  echo \"secrets_present=true\" >> $GITHUB_OUTPUT\nelse\n  echo\
        \ \"No Docker Hub login data found. Skipping Docker.\"\nfi\n"
name: Nightly image build and push
on:
  repository_dispatch:
    types: trigger-ga___nightly-build.yml
